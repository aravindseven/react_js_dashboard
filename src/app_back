import React, { Component } from 'react';
import L from 'leaflet'; // Same as `import * as L from 'leaflet'` with webpack
import 'leaflet/dist/leaflet.css';

import bluemarker from './assets/images/marker-blue.png';
import greenmarker from './assets/images/marker-green.png';
import redmarker from './assets/images/marker-red.png';
import darkmarker from './assets/images/marker-dark.png';
import markershadow from './assets/images/marker-shadow.png';
import './assets/css/map.css';

const blueIcon = L.icon({
  iconUrl: bluemarker,
  shadowUrl: markershadow,

  iconSize:     [25, 41], // size of the icon
  shadowSize:   [41, 41], // size of the shadow
  iconAnchor:   [12, 41], // point of the icon which will correspond to marker's location
  shadowAnchor: [12, 41],  // the same for the shadow
  popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
});

const greenIcon = L.icon({
  iconUrl: greenmarker,
  shadowUrl: markershadow,

  iconSize:     [25, 41], // size of the icon
  shadowSize:   [41, 41], // size of the shadow
  iconAnchor:   [12, 41], // point of the icon which will correspond to marker's location
  shadowAnchor: [12, 41],  // the same for the shadow
  popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
});

const redIcon = L.icon({
  iconUrl: redmarker,
  shadowUrl: markershadow,

  iconSize:     [25, 41], // size of the icon
  shadowSize:   [41, 41], // size of the shadow
  iconAnchor:   [12, 41], // point of the icon which will correspond to marker's location
  shadowAnchor: [12, 41],  // the same for the shadow
  popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
});

const darkIcon = L.icon({
  iconUrl: darkmarker,
  shadowUrl: markershadow,

  iconSize:     [25, 41], // size of the icon
  shadowSize:   [41, 41], // size of the shadow
  iconAnchor:   [12, 41], // point of the icon which will correspond to marker's location
  shadowAnchor: [12, 41],  // the same for the shadow
  popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
});


class App extends Component {
  // render() {
  //   return (
  //     <div className="App">
  //       <div className="App-header">
  //         <img src={bluemarker} className="App-logo" alt="logo" />
  //         <h2>Welcome to React</h2>
  //       </div>
  //       <p className="App-intro">
  //         To get started, edit <code>src/App.js</code> and save to reload.
  //       </p>
  //     </div>
  //   );
  // }
  state = {
    showSigned: true,
    showSpoken: true,
    showWritten: true,
    showUnknown: true,
  };

  handleCheckboxChange = changeEvent => {
    const { name } = changeEvent.target;

    if (name === 'spoken') {
      this.setState({
        showSpoken: !this.state.showSpoken,
      });
    } else if (name === 'written') {
      this.setState({
        showWritten: !this.state.showWritten,
      });
    } else if (name === 'signed') {
      this.setState({
        showSigned: !this.state.showSigned,
      });
    } else if (name === 'unknown') {
      this.setState({
        showUnknown: !this.state.showUnknown,
      });
    }
  };

  componentDidMount() {
    
    const dist_map = L.map('distribution-map').setView([13.0827, 80.2707], 9);

    L.tileLayer(
      'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}',
      {
        // attribution:
        //   'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
        maxZoom: 10,
        id: 'mapbox.streets',
        accessToken:
          'pk.eyJ1IjoicHJvdG9jb2w3IiwiYSI6ImNrMjUxZjEzYTAwbXYzbHRscnE5dDFnOWQifQ.uOVge_4xINbcWwQ8gA-rGg',
      }
    ).addTo(dist_map);

    L.marker([13.0827, 80.2707], {icon: blueIcon}).addTo(dist_map);
    L.marker([13.0827, 81.2707], {icon: greenIcon}).addTo(dist_map);
    L.marker([13.0827, 82.2707], {icon: redIcon}).addTo(dist_map);
    L.marker([13.0827, 83.2707], {icon: darkIcon}).addTo(dist_map);
  }

  render() {
    return (
      <div>
         <div id="distribution-map"/>
      </div>
    );
  }
}

export default App;
